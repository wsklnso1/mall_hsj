<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.mall_hsj_mbg.mapper.TTxExceptionMapper">
  <resultMap id="BaseResultMap" type="org.mall_hsj_mbg.model.TTxException">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ex_state" jdbcType="SMALLINT" property="exState" />
    <result column="group_id" jdbcType="VARCHAR" property="groupId" />
    <result column="mod_id" jdbcType="VARCHAR" property="modId" />
    <result column="registrar" jdbcType="SMALLINT" property="registrar" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="transaction_state" jdbcType="INTEGER" property="transactionState" />
    <result column="unit_id" jdbcType="VARCHAR" property="unitId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_time, ex_state, group_id, mod_id, registrar, remark, transaction_state, 
    unit_id
  </sql>
  <select id="selectByExample" parameterType="org.mall_hsj_mbg.model.TTxExceptionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tx_exception
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_tx_exception
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_tx_exception
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.mall_hsj_mbg.model.TTxExceptionExample">
    delete from t_tx_exception
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.mall_hsj_mbg.model.TTxException">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_tx_exception (create_time, ex_state, group_id, 
      mod_id, registrar, remark, 
      transaction_state, unit_id)
    values (#{createTime,jdbcType=TIMESTAMP}, #{exState,jdbcType=SMALLINT}, #{groupId,jdbcType=VARCHAR}, 
      #{modId,jdbcType=VARCHAR}, #{registrar,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR}, 
      #{transactionState,jdbcType=INTEGER}, #{unitId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.mall_hsj_mbg.model.TTxException">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_tx_exception
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="exState != null">
        ex_state,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="modId != null">
        mod_id,
      </if>
      <if test="registrar != null">
        registrar,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="transactionState != null">
        transaction_state,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exState != null">
        #{exState,jdbcType=SMALLINT},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="modId != null">
        #{modId,jdbcType=VARCHAR},
      </if>
      <if test="registrar != null">
        #{registrar,jdbcType=SMALLINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transactionState != null">
        #{transactionState,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.mall_hsj_mbg.model.TTxExceptionExample" resultType="java.lang.Long">
    select count(*) from t_tx_exception
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_tx_exception
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exState != null">
        ex_state = #{record.exState,jdbcType=SMALLINT},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.modId != null">
        mod_id = #{record.modId,jdbcType=VARCHAR},
      </if>
      <if test="record.registrar != null">
        registrar = #{record.registrar,jdbcType=SMALLINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionState != null">
        transaction_state = #{record.transactionState,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_tx_exception
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ex_state = #{record.exState,jdbcType=SMALLINT},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      mod_id = #{record.modId,jdbcType=VARCHAR},
      registrar = #{record.registrar,jdbcType=SMALLINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      transaction_state = #{record.transactionState,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.mall_hsj_mbg.model.TTxException">
    update t_tx_exception
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exState != null">
        ex_state = #{exState,jdbcType=SMALLINT},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="modId != null">
        mod_id = #{modId,jdbcType=VARCHAR},
      </if>
      <if test="registrar != null">
        registrar = #{registrar,jdbcType=SMALLINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="transactionState != null">
        transaction_state = #{transactionState,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mall_hsj_mbg.model.TTxException">
    update t_tx_exception
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      ex_state = #{exState,jdbcType=SMALLINT},
      group_id = #{groupId,jdbcType=VARCHAR},
      mod_id = #{modId,jdbcType=VARCHAR},
      registrar = #{registrar,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR},
      transaction_state = #{transactionState,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>